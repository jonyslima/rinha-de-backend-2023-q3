version: '3.7'

services:
  db:
    image: postgres
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'
    network_mode: host
    command: postgres -c 'max_connections=810'
    volumes:
#      - ./postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - ./ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
    environment:
      POSTGRES_USER: "quarkus"
      POSTGRES_PASSWORD: "quarkus"
      POSTGRES_DB: "rinha-dev"
    expose:
      - "5432"
   # command: dockerize -wait tcp://db:5432 -timeout 60s
  redis:
    image: redis
    hostname: redis
    network_mode: host
    expose:
      - "6379"
    command: redis-server --save "" --appendonly no --maxclients 20000
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.3GB'
  zookeeper:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs

  kafka:
    image: quay.io/strimzi/kafka:0.23.0-kafka-2.8.0
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181